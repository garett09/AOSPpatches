From 559997dcea2653676a7ffcede10be7a69a67c5df Mon Sep 17 00:00:00 2001
From: Jesse Chan <jc@lineageos.org>
Date: Tue, 17 Apr 2018 16:53:13 -0700
Subject: [PATCH 03/17] input: sec_ts: bind input_open/close to display state

---
 drivers/input/input.c                     |  4 +-
 drivers/input/touchscreen/sec_ts/sec_ts.c | 50 +++++++++++++++++++++++
 drivers/input/touchscreen/sec_ts/sec_ts.h |  9 ++++
 3 files changed, 61 insertions(+), 2 deletions(-)

diff --git a/drivers/input/input.c b/drivers/input/input.c
index 9099c900530e..5aed8d8a4d68 100644
--- a/drivers/input/input.c
+++ b/drivers/input/input.c
@@ -1107,7 +1107,7 @@ void input_close_device(struct input_handle *handle)
 }
 EXPORT_SYMBOL(input_close_device);
 
-static int input_enable_device(struct input_dev *dev)
+int input_enable_device(struct input_dev *dev)
 {
 	int retval;
 
@@ -1132,7 +1132,7 @@ static int input_enable_device(struct input_dev *dev)
 	return retval;
 }
 
-static int input_disable_device(struct input_dev *dev)
+int input_disable_device(struct input_dev *dev)
 {
 	int retval;
 
diff --git a/drivers/input/touchscreen/sec_ts/sec_ts.c b/drivers/input/touchscreen/sec_ts/sec_ts.c
index 8eca885d3371..1f8185d10c61 100644
--- a/drivers/input/touchscreen/sec_ts/sec_ts.c
+++ b/drivers/input/touchscreen/sec_ts/sec_ts.c
@@ -27,6 +27,13 @@ static int sec_ts_input_open(struct input_dev *dev);
 static void sec_ts_input_close(struct input_dev *dev);
 #endif
 
+#if defined(CONFIG_FB)
+static int touch_fb_notifier_callback(struct notifier_block *self,
+		unsigned long event, void *data);
+extern int input_enable_device(struct input_dev *dev);
+extern int input_disable_device(struct input_dev *dev);
+#endif
+
 int sec_ts_read_information(struct sec_ts_data *ts);
 
 #ifdef CONFIG_SECURE_TOUCH
@@ -2386,6 +2393,17 @@ static int sec_ts_probe(struct i2c_client *client, const struct i2c_device_id *i
 			__func__, client->irq);
 #endif
 
+
+#ifdef CONFIG_FB
+	ts->fb_notif.notifier_call = touch_fb_notifier_callback;
+	ret = fb_register_client(&ts->fb_notif);
+	if (ret < 0) {
+		input_err(true, &ts->client->dev, "%s: Failed to register fb client\n",
+			__func__);
+		goto err_fb_client;
+	}
+#endif
+
 	/* need remove below resource @ remove driver */
 #if !defined(CONFIG_SAMSUNG_PRODUCT_SHIP)
 	sec_ts_raw_device_init(ts);
@@ -2432,6 +2450,11 @@ static int sec_ts_probe(struct i2c_client *client, const struct i2c_device_id *i
 	sec_ts_fn_remove(ts);
 	free_irq(client->irq, ts);
 #endif
+#ifdef CONFIG_FB
+	fb_unregister_client(&ts->fb_notif);
+
+err_fb_client:
+#endif
 err_irq:
 	pm_qos_remove_request(&ts->pm_qos_req);
 	if (ts->plat_data->support_dex) {
@@ -2994,6 +3017,12 @@ static int sec_ts_remove(struct i2c_client *client)
 
 	input_info(true, &ts->client->dev, "%s\n", __func__);
 
+#if defined(CONFIG_FB)
+	if (fb_unregister_client(&ts->fb_notif))
+		input_info(true, &ts->client->dev,
+			"%s: Error occured while unregistering fb_notifier.\n", __func__);
+#endif
+
 	sec_ts_ioctl_remove(ts);
 
 	cancel_delayed_work_sync(&ts->work_read_info);
@@ -3258,6 +3287,27 @@ static int sec_ts_pm_resume(struct device *dev)
 
 	return 0;
 }
+
+#if defined(CONFIG_FB)
+static int touch_fb_notifier_callback(struct notifier_block *self,
+		unsigned long event, void *data)
+{
+	struct sec_ts_data *ts =
+		container_of(self, struct sec_ts_data, fb_notif);
+	struct fb_event *ev = (struct fb_event *)data;
+
+	if (ev && ev->data && event == FB_EVENT_BLANK) {
+		int *blank = (int *)ev->data;
+
+		if (*blank == FB_BLANK_UNBLANK)
+			input_enable_device(ts->input_dev);
+		else
+			input_disable_device(ts->input_dev);
+	}
+
+	return 0;
+}
+#endif
 #endif
 
 #ifdef CONFIG_TRUSTONIC_TRUSTED_UI
diff --git a/drivers/input/touchscreen/sec_ts/sec_ts.h b/drivers/input/touchscreen/sec_ts/sec_ts.h
index 583d00f251fd..10b1ad004401 100644
--- a/drivers/input/touchscreen/sec_ts/sec_ts.h
+++ b/drivers/input/touchscreen/sec_ts/sec_ts.h
@@ -40,6 +40,11 @@
 #include <linux/wakelock.h>
 #include <linux/workqueue.h>
 
+#if defined(CONFIG_FB)
+#include <linux/notifier.h>
+#include <linux/fb.h>
+#endif
+
 #if defined(CONFIG_TRUSTONIC_TRUSTED_UI)
 #include <linux/t-base-tui.h>
 #endif
@@ -695,6 +700,10 @@ struct sec_ts_data {
 	volatile bool input_closed;
 	long prox_power_off;
 
+#if defined(CONFIG_FB)
+	struct notifier_block fb_notif;
+#endif
+
 	int touch_count;
 	int tx_count;
 	int rx_count;
-- 
2.17.1

